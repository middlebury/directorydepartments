//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DirectoryDepartments.edu.middlebury.devweb {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebDirectorySoap", Namespace="http://web.middlebury.edu/database/directory")]
    public partial class WebDirectory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback simpleSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback uidSearchOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebDirectory() {
            this.Url = global::DirectoryDepartments.Properties.Settings.Default.DirectoryDepartments_edu_middlebury_devweb_WebDirectory;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDepartmentsCompletedEventHandler getDepartmentsCompleted;
        
        /// <remarks/>
        public event simpleSearchCompletedEventHandler simpleSearchCompleted;
        
        /// <remarks/>
        public event uidSearchCompletedEventHandler uidSearchCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.middlebury.edu/database/directory/getDepartments", RequestNamespace="http://web.middlebury.edu/database/directory", ResponseNamespace="http://web.middlebury.edu/database/directory", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getDepartments(string company) {
            object[] results = this.Invoke("getDepartments", new object[] {
                        company});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getDepartmentsAsync(string company) {
            this.getDepartmentsAsync(company, null);
        }
        
        /// <remarks/>
        public void getDepartmentsAsync(string company, object userState) {
            if ((this.getDepartmentsOperationCompleted == null)) {
                this.getDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDepartmentsOperationCompleted);
            }
            this.InvokeAsync("getDepartments", new object[] {
                        company}, this.getDepartmentsOperationCompleted, userState);
        }
        
        private void OngetDepartmentsOperationCompleted(object arg) {
            if ((this.getDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDepartmentsCompleted(this, new getDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.middlebury.edu/database/directory/simpleSearch", RequestNamespace="http://web.middlebury.edu/database/directory", ResponseNamespace="http://web.middlebury.edu/database/directory", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode simpleSearch(string query, string company) {
            object[] results = this.Invoke("simpleSearch", new object[] {
                        query,
                        company});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void simpleSearchAsync(string query, string company) {
            this.simpleSearchAsync(query, company, null);
        }
        
        /// <remarks/>
        public void simpleSearchAsync(string query, string company, object userState) {
            if ((this.simpleSearchOperationCompleted == null)) {
                this.simpleSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsimpleSearchOperationCompleted);
            }
            this.InvokeAsync("simpleSearch", new object[] {
                        query,
                        company}, this.simpleSearchOperationCompleted, userState);
        }
        
        private void OnsimpleSearchOperationCompleted(object arg) {
            if ((this.simpleSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.simpleSearchCompleted(this, new simpleSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.middlebury.edu/database/directory/uidSearch", RequestNamespace="http://web.middlebury.edu/database/directory", ResponseNamespace="http://web.middlebury.edu/database/directory", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode uidSearch(string uid) {
            object[] results = this.Invoke("uidSearch", new object[] {
                        uid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void uidSearchAsync(string uid) {
            this.uidSearchAsync(uid, null);
        }
        
        /// <remarks/>
        public void uidSearchAsync(string uid, object userState) {
            if ((this.uidSearchOperationCompleted == null)) {
                this.uidSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuidSearchOperationCompleted);
            }
            this.InvokeAsync("uidSearch", new object[] {
                        uid}, this.uidSearchOperationCompleted, userState);
        }
        
        private void OnuidSearchOperationCompleted(object arg) {
            if ((this.uidSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uidSearchCompleted(this, new uidSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void getDepartmentsCompletedEventHandler(object sender, getDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void simpleSearchCompletedEventHandler(object sender, simpleSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class simpleSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal simpleSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void uidSearchCompletedEventHandler(object sender, uidSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uidSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uidSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591